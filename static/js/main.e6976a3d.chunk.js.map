{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundy.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","SearchField","SearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","Response","json","users","filteredRobotes","filter","robot","toLowerCase","includes","length","ErrorBoundy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wOAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACnB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,KACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCcLI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCANC,EARG,SAAC,GAAiC,EAAhCC,YAAiC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAMV,UAAU,MAAhB,SACI,uBAAOA,UAAU,oCAAoCW,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCGtGI,EANA,SAACC,GACZ,OAAU,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAS,kBAAmBC,OAAO,SAArE,SACLJ,EAAMK,YCgBAC,E,kDAjBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHA,E,qDAMnB,SAAkBC,EAAQC,GACtBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAE9B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAdCQ,aC4CZC,G,wDAtCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,YAAcsB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClByB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAM9B,WACE,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV8B,EAAkBnC,EAAOoC,QAAO,SAACC,GACrC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAQtC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAACe,EAAD,UACE,cAAC,EAAD,CAAUzC,OAAQmC,WAPxB,gD,GAxBYX,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAE/CX,M","file":"static/js/main.e6976a3d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id,name,email}) => {\r\n    return ( \r\n        <div className=\"tc bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=''/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n            return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n            );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({SearchField , SearchChange}) => {\r\n    return ( \r\n        <div  className=\"pa2\">\r\n            <input className=\"pa3 ba b--green  bg-lightest-blue\" type=\"search\" placeholder=\"Search Robots\" onChange={SearchChange}/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (  <div style={{overflowY: 'scroll', border : \"1px solid black\", height:'800px'}}>\r\n        {props.children}\r\n    </div>);\r\n}\r\n \r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n    componentDidCatch(error , info){\r\n        this.setState({hasError : true})\r\n    }\r\n    render() { \r\n        if(this.state.hasError){\r\n            return <h1>Oooops..this is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n \r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundy from \"../components/ErrorBoundy\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      SearchField: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((Response) => Response.json())\r\n      .then((users) => {\r\n        this.setState({ robots: users });\r\n      });\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({SearchField : event.target.value})\r\n  };\r\n  render() {\r\n    const { robots, SearchField } = this.state;\r\n    const filteredRobotes = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(SearchField.toLowerCase());\r\n    });\r\n    return !robots.length ? (\r\n      <h1>Loading...</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFreinds</h1>\r\n        <SearchBox SearchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundy>\r\n            <CardList robots={filteredRobotes} />\r\n          </ErrorBoundy>  \r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}